// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String             @id @default(cuid())
  nickname      String?
  email         String?            @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Scalesmovie   Scalemovie[]
  Reviews       Review[]
  favorites     StarOnScalemovie[]
}

model Review {
  id      String @id @default(cuid())
  name    String
  text    String @db.LongText
  userId  String
  movieId String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie   Movie  @relation(fields: [movieId], references: [id], onDelete: Cascade)
}

model Scalemovie {
  id        String             @id @default(cuid())
  name      String
  userId    String
  user      User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  favorites StarOnScalemovie[]
  movies    MovieOnScale[]
}

model MovieOnScale {
  scalemovieId String
  movieId      String
  position     Int
  assignedAt   DateTime   @default(now())
  scalemovie   Scalemovie @relation(fields: [scalemovieId], references: [id])
  movie        Movie      @relation(fields: [movieId], references: [id])

  @@id([scalemovieId, movieId])
}

model StarOnScalemovie {
  scalemovieId String
  userId       String
  assignedAt   DateTime   @default(now())
  scalemovie   Scalemovie @relation(fields: [scalemovieId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@id([scalemovieId, userId])
}

model Movie {
  id             String         @id @default(cuid())
  api_id         Int            @unique
  title          String
  original_title String
  poster    String?
  scales         MovieOnScale[]
  Reviews        Review[]
  @@unique([id, api_id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
